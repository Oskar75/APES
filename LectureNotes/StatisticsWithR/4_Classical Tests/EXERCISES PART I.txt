1)
dataframe: mtcars
target variable: mpg

check for normality by fitting:
quantile-quantile plot
shapiro.test


2)
same story, but considering mpg data with automatic transmission only (indicated by the value 0 in the am column)

3)
import the dataset runners.txt
[time needed by students to run the 100 meters]


again, check / test for normality


#SOLUTIONS
#1)
attach(mtcars)
qqnorm(mpg)
qqline(mpg, lty = 2, col = 2, lwd = 3)
shapiro.test(mpg)


#2)
qqnorm(mpg[am == 0])
qqline(mpg[am == 0], lty = 2, col = 2, lwd = 3)
shapiro.test(mpg[am == 0])
detach(mtcars)

#3)
attach(runners)
qqnorm(time_100_meters)
qqline(time_100_meters, lty = 2, col = 2, lwd = 3)
shapiro.test(time_100_meters) 



#last resort. data transformation to achieve normality
## see e.g. Tukeys ladder of transformation
## see e.g. upward and downward skewness

par(mfrow = c(1,2))
hist(time_100_meters) # upward skewed !
boxplot(time_100_meters) # upward skewed !
par(mfrow = c(1,1))

qqnorm(log(time_100_meters))
qqline(log(time_100_meters),lty=2,col=2,lwd=3)
shapiro.test(log(time_100_meters)) 

qqnorm(-1/(time_100_meters^2))
qqline(-1/(time_100_meters^2),lty=2,col=2,lwd=3)
shapiro.test(-1/(time_100_meters^2)) 



# how did we improve the distribution here?
par(mfrow=c(1,3))
#no transformation
qqnorm(time_100_meters, main = "no transformation")
qqline(time_100_meters, lty = 2, col = 2, lwd = 3)

#log
qqnorm(log(time_100_meters), main = "log")
qqline(log(time_100_meters),lty=2,col=2,lwd=3)

# -1/x2
qqnorm(-1/(time_100_meters^2), main = "-1 / x^2")
qqline(-1/(time_100_meters^2),lty=2,col=2,lwd=3)

par(mfrow=c(1,1))
detach(runners)

 
############### however, remember, YOU USUALLY DO NOT HAVE TO TRANSFORM THE DATA - 
IF WE DO NOT MEET MODELS' ASSUMPTIONS (E.G., NORMALITY OF RESIDUALS), THEN WE MAY THINK ABOUT IT.
In regard of simple stat we are dealing now, then the assumption is normally distributed data and we are allowed to do that BEFORE running the test.



